[package]
name = "bc-envelope"
version = "0.17.4"
edition = "2021"
description = "Gordian Envelope for Rust."
authors = ["Blockchain Commons"]
keywords = ["encoding", "cbor", "binary", "format", "serialization"]
repository = "https://github.com/BlockchainCommons/bc-envelope-rust"
readme = "README.md"
license = "BSD-2-Clause-Patent"
categories = ["data-structures", "encoding"]
documentation = "https://docs.rs/bc-envelope"

[dependencies]
dcbor = { version = "^0.14.0", features = ["multithreaded"] }
bc-rand = "^0.1.0"
bc-crypto = "^0.3.0"
bc-components = "^0.11.0"
bc-ur = "^0.4.0"

paste = "^1.0.12"
hex = "^0.4.3"
itertools = "^0.11.0"
thiserror = "^1.0.48"
anyhow = "^1.0.0"
bytes = "^1.5.0"

[dev-dependencies]
hex-literal = "^0.4.1"
lazy_static = "^1.4.0"
indoc = "^2.0.0"
version-sync = "^0.9.0"

[features]
attachment = ["known_value", "types"]
compress = []
encrypt = ["known_value"]
expression = ["known_value"]
known_value = []
multithreaded = ["dcbor/multithreaded"]
proof = []
recipient = ["encrypt"]
salt = ["known_value"]
signature = ["known_value"]
sskr = ["encrypt"]
transaction = ["expression", "signature", "recipient"]
types = ["known_value"]

default = [
    "attachment",
    "compress",
    "encrypt",
    "expression",
    "known_value",
    "proof",
    "recipient",
    "salt",
    "signature",
    "sskr",
    "transaction",
    "types",
]
